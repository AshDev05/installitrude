#!/bin/bash

ITAL="\e[3m"
BOLD="\e[1m"

GREEN="\e[32m"
YELLOW="\e[33m"
RED="\e[31m"
NONE="\e[0m"

mkdir /tmp/installitrude

clear
echo -e $GREEN"==== Installitrude ====\n"$NONE
echo -e $YELLOW"\nChecking for updates...\n"$NONE

check_pull () {
    local ex_st

    $(cat /tmp/installitrude/pull | grep "Already up to date." > /dev/null)
    ex_st=$?
    if [ $ex_st -eq 0 ]; then
        return 0
    fi
    $(cat /tmp/installitrude/pull | grep "files changed" > /dev/null)
    ex_st=$?
    if [ $ex_st -eq 0 ]; then
        return 1
    fi
    return 84
}

update () {
    local user=$(logname)

    if [[ "$1" != "devmode-on" ]]; then
        if [ "$EUID" -ne 0 ]; then
            echo -e $RED$BOLD"Installitrude must be run as root"$NONE
            rm -rf /tmp/installitrude
            exit 84
        fi
        sudo -u $user git pull --progress origin main &> /tmp/installitrude/pull
        check_pull
        pull_status=$?
        if [ $pull_status -eq 1 ]; then
            echo -e $GREEN"Up-to-date!"$NONE
        else if [ $pull_status -eq 84 ]; then
            echo -e $RED$BOLD"Update failed, you might not experience the latest gertrude tools!"$NONE
            sleep 1
        else
            echo -e $GREEN"The latest version is already installed!"$NONE
            sleep 1
        fi
        fi
    else
        echo -e $RED$BOLD"Dev Mode is on, skipping updates\n"$NONE
        echo -e $RED$BOLD"Bypassing root requirements..."$NONE
        sleep 1
    fi
    clear
}

tools=()
desc=()
deps=()
paths=()
post_cmd=()
config=()
PART=0
while read line; do
    if [[ "$line" != "" ]] && [ $PART == 0 ]; then
        tools+=( "$line" )
    else if [[ "$line" = "" ]]; then
        ((PART++))
    else if [[ "$line" != "" ]] && [ $PART == 1 ]; then
        desc+=( "$line" )
    else if [[ "$line" != "" ]] && [ $PART == 2 ]; then
        deps+=( "$line" )
    else if [[ "$line" != "" ]] && [ $PART == 3 ]; then
        paths+=( "$line" )
    else if [[ "$line" != "" ]] && [ $PART == 4 ]; then
        post_cmd+=( "$line" )
    else if [[ "$line" != "" ]] && [ $PART == 5 ]; then
        config+=( "$line" )
    fi
    fi
    fi
    fi
    fi
    fi
    fi
done < .gertrude_list

# # dont ask. just dont.
# echo ${paths[${deps[1]:0:1}]}

install () {
    local tool=$1
    local end=${#deps[$tool]}-4

    echo -e $GREEN"==== Installitrude ====\n"$NONE
    if [ -d ${paths[$tool]} ]; then
        echo -e $BOLD$RED"Warning: This will perform a clean install, do you really wish to continue? (y/n)"
        read -N 1 confirm
        if [[ $confirm == "n" ]]; then
            echo -e "\nAborted successfully!"$NONE
            sleep 1
            clear
            main_menu
            return 1
        fi
    fi
    if [ ! -d ${paths[${deps[$tool]:0:1}]} ] && [[ "${deps[$tool]}" != "nil" ]]; then
        echo -e $BOLD$RED"This tool requires ${deps[$tool]:4:$end} to be installed."$NONE
        sleep 1
        return 84
    fi
    if [ "$EUID" -ne 0 ]; then
        echo -e $BOLD$RED"Installitrude must be run as root"$NONE
        rm -rf /tmp/installitrude
        exit 84
    fi
    if [[ ${tools[$tool]} != "nil" ]]; then
        echo -e $YELLOW"Installing ${tools[$tool]}...\n"$NONE
        git clone https://github.com/${tools[$tool]}.git ${paths[$tool]}
        echo -e "\n"
    fi
    if [[ ${post_cmd[$tool]} != "nil" ]]; then
        ${post_cmd[$tool]}
    fi
    echo -e $GREEN"Good Plant"$NONE
    sleep 1
    clear
    main_menu
}

c_tool_update () {
    local file_date=$(date -r "$1" +%Y%m%d)
    local curl_date
    local rate_limit

    $(curl https://api.github.com/repos/${tools[$2]}/commits/main \
    --no-progress-meter &> /tmp/installitrude/tool_updt)
    curl_date=$(cat /tmp/installitrude/tool_updt | grep '"date"' \
        | tail -n 1)
    rate_limit=$(cat /tmp/installitrude/tool_updt | grep 'rate limit' \
        | tail -n 1)
    if [[ "$curl_date" = "" ]]; then
        if [[ "$rate_limit" != "" ]]; then
            echo -e $RED$BOLD"\rCould not fetch tool updates (Github REST API rate limit exceeded).\n"$NONE
        else
            echo -e $BOLD$RED"\rCould not fetch tool updates (unknown error)."
            echo -e "Make sure you are connected to the internet and have git installed.\n"$NONE
        fi
        return 0;
    fi
    curl_date=${curl_date:15:10}
    if [[ ${curl_date:9:1} = "T" ]]; then
        curl_date=${curl_date:0:9}
    fi
    if [[ $file_date -le $(date -d "$curl_date" +%Y%m%d) ]]; then
        echo -en $YELLOW
        return 1
    fi
    return 0
}

disp_tools () {
    local buffer

    for i in $(seq 0 $(($1 - 1))); do
        if [ ! -d ${paths[${deps[i]:0:1}]} ] && [[ "${deps[$i]}" != "nil" ]]; then
            buffer=$buffer$RED$ITAL
        fi
        if [ -d ${paths[$i]} ]; then
            buffer=$buffer$GREEN
            c_tool_update ${paths[$i]} $i
        fi
        buffer=$buffer$i" - ${desc[$i]}\n"$NONE
    done
    echo -e $BOLD"\r== What components would you like to install? ==\n"$NONE
    echo -e $buffer
}

update_tool () {
    if [ ${config[$1]} != "nil" ]; then
        cp "${paths[$1]}${config[$1]}" "/tmp/installitrude/saved_config"
    fi
    if [ "$EUID" -ne 0 ]; then
        echo -e $BOLD$RED"Installitrude must be run as root"$NONE
        rm -rf /tmp/installitrude
        exit 84
    fi
    if [[ ${tools[$1]} != "nil" ]]; then
        echo -e $YELLOW"Installing ${tools[$1]}...\n"$NONE
        sudo rm -rf /opt/gertrude-cli
        git clone https://github.com/${tools[$1]}.git ${paths[$1]}
        echo -e "\n"
    fi
    if [[ ${post_cmd[$1]} != "nil" ]]; then
        ${post_cmd[$1]}
    fi
    echo -e $GREEN"Updated "${tools[$1]}$NONE
    if [ ${config[$1]} != "nil" ]; then
        cp /tmp/installitrude/saved_config ${paths[$1]}${config[$1]}
        sudo rm /tmp/installitrude/saved_config
    fi
}

rem_input () {
    local tool=$1
    local nb=$2

    if [[ $tool = "q" ]]; then
        sudo rm -rf /tmp/installitrude
        exit 0
    fi
    if [[ $tool = "b" ]]; then
        clear
        main_menu
        return
    fi
    if [[ $tool -ge "0" ]] && [ $tool -lt $nb ]; then
        clear
        if [[ -d ${paths[$tool]} ]]; then
            uninstall $tool
        fi
    else
        echo -e $RED"\nInvalid input."$NONE
        sleep 1
        clear
        rem_menu "$3"
        return -1
    fi
}

rem_menu () {
    local nb=$1
    local tool
    local count=0

    echo -e $GREEN"==== Installitrude ====\n"$NONE
    for i in $(seq 0 $((nb - 1))); do
        if [ -d ${paths[$i]} ]; then
            echo -e $i" - ${desc[$i]}"$NONE
            ((count++))
        fi
    done
    echo -en "\n$YELLOW"
    read -N 1 -p "[0-$((count - 1))], [b]ack, [q]uit: " tool
    echo -en "$NONE"
    rem_input "$tool" "$count" "$nb"
}

update_all () {
    echo -e $GREEN"==== Installitrude ====\n"$NONE
    for i in $(seq 0 $(($1 - 1))); do
        if [ -d ${paths[$i]} ]; then
            c_tool_update ${paths[$i]} $i
            if [ $? = 1 ]; then
                update_tool $i
            fi
        fi
    done
    echo -e $GREEN"Everything is up to date!"
    sleep 1;
    clear
    main_menu
}

main_input () {
    local tool="$1"
    local nb="$2"

    if [[ $tool = "q" ]]; then
        sudo rm -rf /tmp/installitrude
        exit 0
    fi
    if [[ $tool = "U" ]]; then
        clear
        update_all $nb
        return
    fi
    if [[ $tool = "r" ]]; then
        clear
        rem_menu $nb
        return
    fi
    if [[ "$tool" -ge "0" ]] && [[ "$tool" -lt "$nb" ]]; then
        clear
        install $tool
        exit=$?
        if [ $exit == 84 ]; then
            clear
            main_menu
            return
        fi
    else
        echo -e $RED"\nInvalid input."$NONE
        sleep 1
        clear
        main_menu
        return 0
    fi
}

main_menu () {
    local nb=${#tools[@]}
    local exit
    local tool

    echo -e $GREEN"==== Installitrude ====\n"$NONE
    echo -en $YELLOW"Checking for updates..."$NONE
    disp_tools $nb
    echo -en "\n$YELLOW"
    read -N 1 -p "[0-$((nb - 1))], [q]uit, [U]pdate All, [r]emove One: " tool
    echo -en $NONE
    main_input "$tool" "$nb"
}

clear
if [[ "$1" != "" && "$1" != "devmode-on" ]]; then
    lua lua/init.lua "$@"
    exit 0
fi
update "$@"
main_menu
rm -rf /tmp/installitrude

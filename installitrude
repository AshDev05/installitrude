#!/bin/bash

ITAL="\e[3m"

GREEN="\e[32m"
YELLOW="\e[33m"
RED="\e[31m"
NONE="\e[0m"

mkdir /tmp/installitrude

clear
echo -e $GREEN"==== Installitrude ====\n"$NONE
echo -e $YELLOW"\nChecking for updates...\n"$NONE

check_pull () {
    local ex_st

    $(cat /tmp/installitrude/pull | grep "Already up to date." > /dev/null)
    ex_st=$?
    if [ $ex_st -eq 0 ]; then
        return 0
    fi
    $(cat /tmp/installitrude/pull | grep "files changed" > /dev/null)
    ex_st=$?
    if [ $ex_st -eq 0 ]; then
        return 1
    fi
    return 84
}

update () {
    if [[ "$1" != "devmode-on" ]]; then
        git pull --progress origin main &> /tmp/installitrude/pull
        check_pull
        pull_status=$?
        if [ $pull_status -eq 1 ]; then
            echo -e $GREEN"Up-to-date!"$NONE
        else if [ $pull_status -eq 84 ]; then
            echo -e $RED"Update failed, you might not experience the latest gertrude tools!"$NONE
            sleep 1
        else
            echo -e $GREEN"The latest version is already installed!"$NONE
            sleep 1
        fi
        fi
    else
        echo -e $RED"Dev Mode is on, skipping updates\n"$NONE
        sleep 1
    fi
    clear
}

tools=()
desc=()
deps=()
paths=()
post_cmd=()
PART=0
while read line; do
    if [[ "$line" != "" ]] && [ $PART == 0 ]; then
        tools+=( "$line" )
    else if [[ "$line" = "" ]]; then
        ((PART++))
    else if [[ "$line" != "" ]] && [ $PART == 1 ]; then
        desc+=( "$line" )
    else if [[ "$line" != "" ]] && [ $PART == 2 ]; then
        deps+=( "$line" )
    else if [[ "$line" != "" ]] && [ $PART == 3 ]; then
        paths+=( "$line" )
    else if [[ "$line" != "" ]] && [ $PART == 4 ]; then
        post_cmd+=( "$line" )
    fi
    fi
    fi
    fi
    fi
    fi
done < .gertrude_list

# # dont ask. just dont.
# echo ${paths[${deps[1]:0:1}]}

install () {
    local tool=$1
    local end=${#deps[$tool]}-4

    echo -e $GREEN"==== Installitrude ====\n"$NONE
    if [ ! -d ${paths[${deps[$tool]:0:1}]} ] && [[ "${deps[$tool]}" != "nil" ]]; then
        echo -e $RED"This tool requires ${deps[$tool]:4:$end} to be installed."$NONE
        sleep 1
        return 84
    fi
    if [ -d ${paths[$tool]} ]; then
        echo -e $GREEN"This tool is already installed, enjoy!"$NONE
        sleep 1
        clear
        main_menu
        return 0
    fi
    if [ "$EUID" -ne 0 ]; then
        echo -e $RED"Installitrude must be run as root"$NONE
        rm -rf /tmp/installitrude
        exit 84
    fi
    if [[ ${tools[$tool]} != "nil" ]]; then
        echo -e $YELLOW"Installing ${tools[$tool]}...\n"$NONE
        git clone https://github.com/${tools[$tool]}.git ${paths[$tool]}
        echo -e "\n"
    fi
    if [[ ${post_cmd[$tool]} != "nil" ]]; then
        ${post_cmd[$tool]}
    fi
    echo -e $GREEN"Good Plant"$NONE
    sleep 1
    clear
    main_menu
}

c_tool_update () {
    local file_date=$(date -r $1 +%Y%m%d)
    local curl_date

    $(curl https://api.github.com/repos/${tools[$2]}/commits/main \
    --no-progress-meter 2>&1 | grep '"date"' \
    | tail -n 1 > /tmp/installitrude/tool_updt)
    curl_date=$(cat /tmp/installitrude/tool_updt)
    curl_date=${curl_date:15:10}
    if [[ ${curl_date:9:1} = "T" ]]; then
        curl_date=${curl_date:0:9}
    fi
    if [[ $file_date -le $(date -d $curl_date +%Y%m%d) ]]; then
        echo -e $YELLOW
    fi
}

disp_tools () {
    for (( i = 0; i < nb; i++ )) do
        if [ ! -d ${paths[${deps[i]:0:1}]} ] && [[ "${deps[$i]}" != "nil" ]]; then
            echo -e $RED$ITAL
        fi
        if [ -d ${paths[$i]} ]; then
            echo -e $GREEN
            c_tool_update ${paths[$i]} $i
        fi
        echo -e $i" - ${desc[$i]}"$NONE
    done
}

main_menu () {
    local nb=${#tools[@]}
    local exit
    local tool

    echo -e $GREEN"==== Installitrude ====\n"$NONE
    echo -e "What components would you like to install?\n"
    disp_tools
    echo -e "\n$YELLOW"
    read -N 1 -p "Enter a number within the range or 'q' to exit: " tool
    echo -e $NONE
    if [[ $tool = "q" ]]; then
        exit 0
    fi
    if [[ $tool -ge "0" ]] && [ $tool -lt $nb ]; then
        clear
        install $tool
        exit=$?
        if [ $exit == 84 ]; then
            clear
            main_menu
        fi
    else
        echo -e $RED"Invalid input."$NONE
        sleep 1
        clear
        main_menu
        return 0
    fi
}

update '$@'
main_menu
rm -rf /tmp/installitrude
